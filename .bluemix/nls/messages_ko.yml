---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()

# text in toolchain.yml
template.name: "Code Engine 앱 개발"
template.description: "(종량과금제 계정 필요) 이 도구 체인을 사용하여 IBM Cloud에서 애플리케이션을 Code Engine, 공유, 다중 테넌트 Kubernetes 서비스로 안전하게 개발하고 배치할 수 있습니다. 기본적으로 도구 체인은 샘플 Node.js \"Hello World\" 앱을 사용하지만 사용자가 사용자 자체 GitHub 저장소에 링크할 수 있습니다. 도구 체인은 [Vulnerability Advisor](https://cloud.ibm.com/docs/services/va?topic=va-va_index)가 포함된 지속적 딜리버리, 소스 제어, 문제 추적 및 온라인 편집을 위해 사전 구성되어 있습니다.\n\n [console](https://cloud.ibm.com/codeengine/projects)에서 Code Engine 프로젝트 및 애플리케이션을 관리할 수 있습니다.\n\n이 도구 체인은 지속적 딜리버리 서비스의 일부인 도구를 사용합니다. 해당 서비스의 인스턴스가 선택된 리소스 그룹이나 조직에 아직 없는 경우, **작성**을 클릭하면 무료 [Lite](/catalog/services/continuous-delivery/) 플랜이 선택된 상태로 인스턴스가 자동으로 추가됩니다.\n\n\n\n시작하려면 **작성**을 클릭하십시오."
template.gettingStarted: " **도구 체인이 준비되었습니다!**\n\n**빠른 시작:** 새 Docker 이미지 빌드를 트리거하려면 Git repo에 변경사항을 커미트하십시오. 이는 취약성에 대해 스캔되고 Code Engine 프로젝트에 배치됩니다. 단계별 지시사항은 이 도구 체인의 [학습서](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-code-engine)를 참조하십시오."

# text in form-schema.json
deploy.title: "Hello World 배치 단계"
deploy.description: "hello World 단순 도구 체인"
deploy.longDescription: "Delivery Pipeline을 사용하여 Docker 애플리케이션의 지속적인 빌드, 테스트 및 배치를 자동화합니다. \n\n [문서 보기](https://cloud.ibm.com/docs/codeengine#term-summary) ![](https://cloud.ibm.com/media/docs/images/icons/launch-glyph.svg)"
deploy.appName: "앱 이름"
deploy.appDescription: "사용자 애플리케이션의 이름입니다."
deploy.apikeyDescription: "IBM Cloud API 키는 IBM Cloud에 액세스하는 데 사용됩니다. API 키는 'bx iam API-key-create'를 사용하거나 https://cloud.ibm.com/iam/apikeys의 콘솔을 통해 **IBM Cloud API 키 작성**(각 API 키 한 번만 볼 수 있습니다)."
deploy.registryRegionDescription: "이미지 레지스트리의 IBM Cloud 지역"
deploy.registrynsDescription: "컨테이너 이미지 레지스트리의 네임스페이스입니다. [ibmcloud cr namespace-add]를 사용하여 설정할 수 있습니다. https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started. 자세히 보기"
deploy.apikey: "IBM Cloud API 키"
deploy.containerregRegion: "컨테이너 레지스트리 지역"
deploy.containerregns: "컨테이너 레지스트리 네임스페이스"
deploy.codeEngineProjectTitle: "Code Engine 프로젝트"
deploy.codeEngineProjectDescription: "프로젝트의 이름"
deploy.codeEngineRegionTitle: " Code Engine 영역"
deploy.codeEngineRegionDescription: "프로덕션 배치를 위한 IBM Cloud 지역"
deploy.codeEngineResourceGroupTitle: "Code Engine 자원 그룹"
deploy.codeEngineResourceGroupDescription: "프로덕션 배치를 위한 IBM Cloud 리소스 그룹"
deploy.codeengine.project: "기존 Code Engine 프로젝트를 선택하거나 새 프로젝트의 이름을 입력하십시오."
deploy.codeengine.rg: "리소스 그룹을 선택하십시오."
deploy.codeengine.region: "Code Engine 프로젝트가 있는 또는 작성할 영역을 선택하십시오."
deploy.codeengine.cr: "드롭 다운에서 Container Registry 영역을 선택하십시오."
deploy.icr.ns: "Container Registry 네임스페이스를 선택하거나 컨테이너 레지스트리 네임스페이스의 새 이름을 입력하십시오. 참고: 이 이름은 고유해야 합니다."
deploy.notification: "이 단계에서 기존 Code Engine 프로젝트의 세부사항을 입력하십시오. 프로젝트가 없는 경우 이름을 제공하면 선택한 리소스 그룹 및 영역에 자동으로 작성됩니다."
deploy.rg: "자원 그룹"

#spanned over two lines "Issue Tracker"
headerSVG.issueTracker1: "문제"
headerSVG.issueTracker2: "추적 프로그램"
#spanned over two lines "Code Engine"
headerSVG.codeEngine1: "코드"
headerSVG.codeEngine2: "엔진"
#spanned over two lines "App Repo"
headerSVG.appRepo1: "앱"
headerSVG.appRepo2: "저장소"
headerSVG.ciPipeline: "CI Pipeline"
headerSVG.prPipeline: "PR Pipeline"
headerSVG.coderisk: "Code Risk"
headerSVG.analyzer: "Analyzer"
headerSVG.devops: "DevOps"
headerSVG.insights: "Insights"
wizard.welcome.description: "이 도구 체인을 사용하여 IBM Cloud에서 애플리케이션을 Code Engine, 공유, 다중 테넌트 Kubernetes 서비스로 안전하게 개발하고 배치할 수 있습니다. 기본적으로 도구 체인은 샘플 Node.js \"Hello World\" 앱을 사용하지만 대신 자체 GitHub 저장소에 연결할 수 있습니다. \n\n**참고:** 종량과금제 계정 또는 구독 계정이 있어야 합니다. Code Engine을 배포 대상으로 사용하려면 계정이 필요합니다. 무료 Lite 계정을 사용하는 경우에는 이 계정을 업그레이드해야 합니다."
wizard.sourceHost: "소스 제공자"
wizard.step.application.title: "애플리케이션"
wizard.step.inventory.title: "재고"
wizard.step.inventory.label: "재고"
wizard.step.vault.title: "시크릿"
wizard.step.keyprotect.title: "Key Protect"
wizard.step.secretsmanager.title: "Secrets Manager"
wizard.step.hashicorpvault.title: "HashiCorp Vault"
wizard.step.deploy.label: "배치 대상"
wizard.step.deploy.title: "배치 대상"
wizard.step.optionaltools.title: "선택적 도구"
wizard.step.summary.title: "요약"
wizard.app.title: "애플리케이션 저장소"
wizard.app.longDescription: "애플리케이션 저장소는 CI 파이프라인이 빌드, 테스트하고 대상 아티팩트 레지스트리에 전달하는 프로젝트 또는 서비스 소스 코드입니다.\n\n시작하는 데 도움이 되도록, 도구 체인은 [샘플 NodeJS 앱](https://us-south.git.cloud.ibm.com/open-toolchain/hello-containers)을 제공합니다. 샘플 노드 JS 앱 대신 기존 애플리케이션을 사용하려면 고급 섹션을 클릭하십시오.\n\n기본적으로, 애플리케이션 저장소 템플리트는 Git Repo and Issue Tracking 조직으로 복제됩니다. 조직을 변경하려면, **고급 옵션**을 사용으로 설정하고 **저장소 소유자** 필드를 편집하십시오."
wizard.app.clone: "기본 샘플 애플리케이션 사용"
wizard.app.link: "고유 애플리케이션 가져오기"
wizard.repo.invalidOptionMsg: "지원되지 않는 구성 옵션을 선택했습니다. **고급 옵션**을 사용으로 설정하십시오."
wizard.inventory.title: "인벤토리 저장소"
wizard.inventory.longDescription: "인벤토리 저장소는 CI 파이프라인에서 빌드한 아티팩트의 세부사항을 기록합니다.\n\n[인벤토리 저장소 템플리트](https://us-south.git.cloud.ibm.com/open-toolchain/inventory)의 복제본이 될 인벤토리 저장소를 새로 작성하거나 도구 체인 간에 공유 중인 기존 인벤토리 저장소를 사용하도록 선택할 수 있습니다.\n\n기본적으로, 인벤토리 저장소 템플리트는 Git Repo and Issue Tracking 조직으로 복제됩니다. 조직을 변경하려면, **고급 옵션**을 사용으로 설정하고 **저장소 소유자** 필드를 편집하십시오."
wizard.inventory.info: "인벤토리에 대한 자세한 정보는 [문서]()를 참조하십시오."
wizard.inventory.clone: "새 인벤토리 저장소 작성"
wizard.inventory.link: "기존 인벤토리 저장소 사용"
wizard.vault.title: "시크릿 관리"
wizard.vault.longDescription: "이 도구 체인의 일부 도구는 권한 있는 리소스에 액세스하는 데 시크릿이 필요합니다. IBM Cloud API 키는 이러한 시크릿의 예입니다. 모든 시크릿은 시크릿 저장에 안전하게 저장한 다음 도구 체인에서 요구하는 대로 참조해야 합니다."
wizard.vault.keyProtect.title: "Key Protect"
wizard.vault.keyProtect.description: "Key Protect는 IBM Cloud 서비스 또는 고객이 빌드한 애플리케이션에서 사용되는 암호화 키의 라이프사이클 관리를 제공하는 클라우드 기반의 보안 서비스입니다."
wizard.vault.secretsManager.title: "Secrets Manager"
wizard.vault.secretsManager.description: "Secrets Manager를 사용하면 IBM Cloud 서비스 또는 사용자 정의 애플리케이션에서 사용되는 시크릿을 작성, 임대 및 중앙에서 관리할 수 있습니다."
wizard.vault.hashicorp.title: "HashiCorp Vault"
wizard.vault.notification.title: "시크릿 저장소"
wizard.vault.notification.sutitle: "우수 사례로서 다음 도구 중 하나에 시크릿을 저장하십시오."
wizard.vault.hashicorp.description: "HashiCorp Vault는 프로그래밍 방식의 액세스를 통해 사용자와 머신 모두에 대한 시스템 액세스를 중개하는 시크릿 관리 솔루션입니다."
wizard.vault.info: "사용자의 시크릿을 포함하는 시크릿 제공자를 식별하십시오."
wizard.step.deploymentStrategy.title: "배치"
wizard.step.deploymentStrategy.description: "애플리케이션 빌드 전략 및 배치 유형 선택"
wizard.optional.tools.title: "기타 도구"
wizard.optional.tools.longDescription: "도구 체인에 포함될 수 있는 선택적 도구입니다."
wizard.optional.tools.doi.title: "DevOps Insights(필요한 구성 없음)"
wizard.optional.tools.doi.description: "DevOps Insights는 많이 사용되는 지속적 통합 및 지속적 딜리버리 도구에서 포괄적인 인사이트를 제공하여 애플리케이션 딜리버리의 속도 및 제어 기능을 개선합니다."
wizard.summary.title: "요약"
wizard.summary.success.title: "축하합니다!"
wizard.summary.success.subtitle: "도구 체인 구성을 완료했습니다. 아래의 '작성' 단추를 클릭하여 선택한 도구 및 설정으로 도구 체인을 작성하십시오."
wizard.welcome.documentation.link.text: "문서"
wizard.welcome.tutorial.link.text: "학습서"
wizard.deploy.title: "애플리케이션을 빌드하고 배치하는 방법"
wizard.deploy.buildpacks: "빌드팩"
wizard.deploy.dockerfile: "Dockerfile"
wizard.deploy.application: "애플리케이션"
wizard.deploy.job: "작업"
wizard.deploy.target.strategy: "Code Engine은 Dockerfile 및 Cloud Native Buildpacks에서 빌드를 지원합니다. "
wizard.deploy.target.deployment: "애플리케이션 배치 유형 선택"
deploy.deploytarget.help : "자세한 정보는 [문서 참조](https://cloud.ibm.com/docs/codeengine?topic=codeengine-deploy-app-tutorial) ![](https://cloud.ibm.com/media/docs/images/icons/launch-glyph.svg)"
wizard.step.build.label: "전략"
wizard.step.build.title: "전략"
