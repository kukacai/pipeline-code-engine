---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()

# text in toolchain.yml
template.name: "Code Engine-App entwickeln"
template.description: "(Nutzungsabhängiges Konto erforderlich) Mit dieser Toolchain können Sie eine Anwendung sicher in Code Engine, einem gemeinsam genutzten Multi-Tenant-Kubernetes-Service in IBM Cloud, entwickeln und bereitstellen. Standardmäßig verwendet die Toolchain die Node.js-Beispiel-App \"Hello World\", aber Sie können stattdessen auch eine Verknüpfung zu Ihrem eigenen GitHub-Repository herstellen. Die Toolchain ist für Continuous Delivery mit [Vulnerability Advisor](https://cloud.ibm.com/docs/services/va?topic=va-va_index), Quellcodeverwaltung, Issue-Verfolgung und Onlinebearbeitung vorkonfiguriert.\n\n Sie können Ihre Code Engine-Projekte und -Anwendungen in der [Konsole](https://cloud.ibm.com/codeengine/projects) verwalten.\n\nDie Toolchain verwendet Tools, die Teil des Continuous Delivery-Service sind. Wenn sich noch keine Instanz dieses Service in der ausgewählten Ressourcengruppe oder Organisation befindet, wird sie automatisch hinzugefügt, wenn Sie auf **Erstellen** klicken. Dabei ist der kostenlose Plan [Lite](/catalog/services/continuous-delivery/) ausgewählt.\n\nKlicken Sie auf **Erstellen**, um zu beginnen."
template.gettingStarted: " **Ihre Toolchain ist bereit!**\n**Schnelleinstieg:** Schreiben Sie eine Änderung im Git-Repository fest, um einen neuen Build eines Docker-Image auszulösen, der auf Sicherheitslücken geprüft und in Ihrem Code Engine-Projekt bereitgestellt wird. Schritt-für-Schritt-Anleitungen finden Sie im [Lernprogramm](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-code-engine) für diese Toolchain."

# text in form-schema.json
deploy.title: "Bereitstellungsphase von Hello World"
deploy.description: "Hello World - Einfache Toolchain"
deploy.longDescription: "Mit Delivery Pipeline werden die kontinuierliche Builderstellung, Tests und Bereitstellungen der Docker-Anwendung automatisiert. \n\n [Dokumente anzeigen](https://cloud.ibm.com/docs/codeengine#term-summary) ![](https://cloud.ibm.com/media/docs/images/icons/launch-glyph.svg)"
deploy.appName: "App-Name"
deploy.appDescription: "Der Name Ihrer Anwendung"
deploy.apikeyDescription: "Der IBM Cloud-API-Schlüssel wird für den Zugriff auf IBM Cloud verwendet. Sie können Ihren API-Schlüssel mit 'bx iam api-key-create' oder über die Konsole unter https://cloud.ibm.com/iam/apikeys abrufen, indem Sie auf **IBM Cloud-API-Schlüssel erstellen** klicken. (Jeder API-Schlüssel kann nur einmal angezeigt werden)."
deploy.registryRegionDescription: "Die IBM Cloud-Region für die Image-Registry"
deploy.registrynsDescription: "Der Namespace in der Container-Image-Registry. Dieser kann mit [ibmcloud cr namespace-add] eingerichtet werden. Weitere Informationen finden Sie unter https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.."
deploy.apikey: "IBM Cloud API-Schlüssel"
deploy.containerregRegion: "Container-Registry-Bereich"
deploy.containerregns: "Container-Registry-Namespace"
deploy.codeEngineProjectTitle: "Code Engine-Projekt"
deploy.codeEngineProjectDescription: "Name Ihres Projekts"
deploy.codeEngineRegionTitle: " Code Engine-Region"
deploy.codeEngineRegionDescription: "Die IBM Cloud-Region für die Produktionsbereitstellung"
deploy.codeEngineResourceGroupTitle: "Code Engine-Ressourcengruppe"
deploy.codeEngineResourceGroupDescription: "Die IBM Cloud-Ressourcengruppe für die Produktionsbereitstellung"
deploy.codeengine.project: "Wählen Sie ein vorhandenes Code Engine-Projekt aus oder geben Sie einen Namen für ein neues Projekt ein."
deploy.codeengine.rg: "Wählen Sie eine Ressourcengruppe aus."
deploy.codeengine.region: "Wählen Sie eine Region aus, in der Ihr Code Engine-Projekt vorhanden ist oder erstellt wird."
deploy.codeengine.cr: "Wählen Sie in der Dropdown-Liste die Container-Registry-Region aus."
deploy.icr.ns: "Wählen Sie einen Container-Registry-Namespace aus oder geben Sie einen neuen Namen für den Container-Registry-Namespace ein. Hinweis: Dieser Name muss eindeutig sein."
deploy.notification: "Geben Sie in diesem Schritt Details zum vorhandenen Code Engine-Projekt ein. Wenn kein Projekt vorhanden ist, geben Sie einen Namen an, der automatisch in Ihrer ausgewählten Ressourcengruppe und Region erstellt wird."
deploy.rg: "Ressourcengruppe"

#spanned over two lines "Issue Tracker"
headerSVG.issueTracker1: "Problem"
headerSVG.issueTracker2: "Tracker"
#spanned over two lines "Code Engine"
headerSVG.codeEngine1: "Code"
headerSVG.codeEngine2: "Engine"
#spanned over two lines "App Repo"
headerSVG.appRepo1: "App"
headerSVG.appRepo2: "Repo"
headerSVG.ciPipeline: "CI-Pipeline"
headerSVG.prPipeline: "PR-Pipeline"
headerSVG.coderisk: "Code Risk"
headerSVG.analyzer: "Analyzer"
headerSVG.devops: "DevOps"
headerSVG.insights: "Insights"
wizard.welcome.description: "Mit dieser Toolchain können Sie eine Anwendung sicher in Code Engine, einem gemeinsam genutzten Multi-Tenant-Kubernetes-Service in IBM Cloud, entwickeln und bereitstellen. Standardmäßig verwendet die Toolchain eine Node.js-Beispielanwendung namens \"Hello World\", aber Sie können stattdessen eine Verknüpfung zu Ihrem eigenen GitHub-Repository herstellen. \n\n**Hinweis:** Sie müssen entweder über ein nutzungsabhängiges Konto oder über ein Abonnementkonto verfügen, um Code Engine als Bereitstellungsziel verwenden zu können. Wenn Sie ein kostenloses Lite-Konto verwenden, müssen Sie ein Upgrade durchführen."
wizard.sourceHost: "Quellenprovider"
wizard.step.application.title: "Anwendung"
wizard.step.inventory.title: "Bestand"
wizard.step.inventory.label: "Bestand"
wizard.step.vault.title: "Geheime Schlüssel"
wizard.step.keyprotect.title: "Key Protect"
wizard.step.secretsmanager.title: "Secrets Manager"
wizard.step.hashicorpvault.title: "HashiCorp Vault"
wizard.step.deploy.label: "Bereitstellungsziel"
wizard.step.deploy.title: "Bereitstellungsziel"
wizard.step.optionaltools.title: "Optionale Tools"
wizard.step.summary.title: "Zusammenfassung"
wizard.app.title: "Anwendungsrepository"
wizard.app.longDescription: "Das Anwendungsrepository ist der Projekt-oder Servicequellcode, den die CI-Pipeline erstellt, testet und an Zielartefakt-Registrys übergibt.\n\nUm Ihnen den Einstieg zu erleichtern, bietet die Toolchain eine [Beispiel-NodeJS-App](https://us-south.git.cloud.ibm.com/open-toolchain/hello-containers) an. Wenn Sie anstelle der NodeJS-Beispielanwendung eine vorhandene Anwendung verwenden möchten, klicken Sie auf den Abschnitt \"Erweitert\".\n\nStandardmäßig wird die Anwendungsrepository-Vorlage in Ihre Git-Repository-und Problemverfolgungsorganisation geklont. Um die Organisation zu ändern, aktivieren Sie **Erweiterte Optionen** und bearbeiten Sie das Feld **Repository-Eigner**."
wizard.app.clone: "Standardmusteranwendung verwenden"
wizard.app.link: "Bringen Sie Ihre eigene Anwendung mit"
wizard.repo.invalidOptionMsg: "Sie haben eine nicht unterstützte Konfigurationsoption ausgewählt. Aktivieren Sie **Erweiterte Optionen**."
wizard.inventory.title: "Bestandsrepository"
wizard.inventory.longDescription: "Im Bestandsrepository werden Details zu Artefakten aufgezeichnet, die von der CI-Pipeline erstellt werden.\n\nSie können entweder ein neues Bestandsrepository erstellen, das ein Klon der [Bestands-Repository-Vorlage](https://us-south.git.cloud.ibm.com/open-toolchain/inventory) ist, oder ein vorhandenes Bestandsrepository verwenden, das Sie zwischen Toolchains gemeinsam nutzen.\n\nStandardmäßig wird die Vorlage für das Bestandsrepository in Ihre Git Repository- und Issue-Verfolgungs-Organisation geklont. Um die Organisation zu ändern, aktivieren Sie **Erweiterte Optionen** und bearbeiten Sie das Feld **Repository-Eigner**."
wizard.inventory.info: "Weitere Informationen zu \"Bestand\" finden Sie in der [Dokumentation]()."
wizard.inventory.clone: "Neues Bestandsrepository erstellen"
wizard.inventory.link: "Vorhandenes Bestandsrepository verwenden"
wizard.vault.title: "Verwaltung von geheimen Schlüsseln"
wizard.vault.longDescription: "Manche Tools in dieser Toolchain erfordern geheime Schlüssel für den Zugriff auf berechtigte Ressourcen. Ein IBM Cloud-API-Schlüssel ist ein Beispiel für einen solchen geheimen Schlüssel. Alle geheimen Schlüssel sollten sicher in einem Vault für geheime Schlüssel gespeichert und dann bei Bedarf durch die Toolchain referenziert werden."
wizard.vault.keyProtect.title: "Key Protect"
wizard.vault.keyProtect.description: "Key Protect ist ein cloudbasierter Sicherheitsservice, der Lebenszyklusmanagement für Verschlüsselungsschlüssel bereitstellt, die in IBM Cloud-Services oder Kundenanwendungen verwendet werden."
wizard.vault.secretsManager.title: "Secrets Manager"
wizard.vault.secretsManager.description: "Mit Secrets Manager können Sie geheime Schlüssel, die in IBM Cloud-Services oder Ihren Kundenanwendungen verwendet werden, erstellen, leasen und zentral verwalten."
wizard.vault.hashicorp.title: "HashiCorp Vault"
wizard.vault.notification.title: "Speicher für geheime Schlüssel"
wizard.vault.notification.sutitle: "Als bewährtes Verfahren speichern Sie geheime Schlüssel in einem der folgenden Werkzeuge."
wizard.vault.hashicorp.description: "HashiCorp Vault ist eine Lösung zur Verwaltung geheimer Schlüssel, die Zugriff auf Systeme sowohl für Menschen als auch für Maschinen programmgesteuert makelt."
wizard.vault.info: "Geben Sie die Provider geheimer Schlüssel an, die Ihre geheimen Schlüssel enthalten:"
wizard.step.deploymentStrategy.title: "Bereitstellung"
wizard.step.deploymentStrategy.description: "Wählen Sie Ihre Strategie für den Anwendungs-Build und Ihren Bereitstellungstyp aus"
wizard.optional.tools.title: "Andere Tools"
wizard.optional.tools.longDescription: "Dies sind optionale Tools, die in Ihre Toolchain eingeschlossen werden können."
wizard.optional.tools.doi.title: "DevOps Insights (keine Konfiguration erforderlich)"
wizard.optional.tools.doi.description: "DevOps Insights stellt umfassende Einblicke aus gängigen Tools für kontinuierliche Integration und Continuous Delivery bereit, um die Geschwindigkeit und Steuerung der Bereitstellung Ihrer Anwendung zu erhöhen."
wizard.summary.title: "Zusammenfassung"
wizard.summary.success.title: "Herzlichen Glückwunsch"
wizard.summary.success.subtitle: "Sie haben die Konfiguration Ihrer Toolchain abgeschlossen. Klicken Sie auf die Schaltfläche 'Erstellen' unten, um die Toolchain mit Ihren ausgewählten Tools und Einstellungen zu erstellen."
wizard.welcome.documentation.link.text: "Dokumentation"
wizard.welcome.tutorial.link.text: "Lernprogramm"
wizard.deploy.title: "Wie möchten Sie Ihre Anwendung erstellen und implementieren?"
wizard.deploy.buildpacks: "Buildpacks"
wizard.deploy.dockerfile: "Dockerfile"
wizard.deploy.application: "Anwendung"
wizard.deploy.job: "Job"
wizard.deploy.target.strategy: "Code Engine unterstützt die Erstellung aus einer Dockerfile und cloudnativen Buildpacks "
wizard.deploy.target.deployment: "Anwendungsimplementierungstyp auswählen"
deploy.deploytarget.help : "Weitere Informationen finden Sie unter [Dokumente anzeigen](https://cloud.ibm.com/docs/codeengine?topic=codeengine-deploy-app-tutorial) ![](https://cloud.ibm.com/media/docs/images/icons/launch-glyph.svg)"
wizard.step.build.label: "Strategie"
wizard.step.build.title: "Strategie"
